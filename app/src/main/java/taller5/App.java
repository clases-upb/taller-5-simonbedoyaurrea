/*
 * This source file was generated by the Gradle 'init' task
 */
package taller5;
import java.text.DecimalFormat;
import java.util.Scanner;

public class App {
    
    public static void main(String[] args) {
        
        try {
            System.out.println(Calcular_empaque(30));
            System.out.println(Jugar_21(6));
            System.out.println(Simular_ventas());
            System.out.println(Calcular_intento());
        } 
        
        catch (Exception e) {
            
        }
    }


    /*
    
        1.	Desarrolle un algoritmo e impleméntelo en Java que: le pida al usuario un número entero positivo 
        entre 1000 y 9999. En un ciclo genere números de manera aleatoria y cuente los intentos que hizo antes 
        de hallar el número exactamente.
        
    
    */ 

         public static int Calcular_intento(){
        try {
            int nro_random=0;
            int numero_min=1000;
            int numero_max=9999;
            int contador=0;
            Scanner scanner=new Scanner(System.in);
            
            System.out.print("Ingresa un número entre 1000 y 9999: ");
            int nro_usuario = scanner.nextInt();
    
            if(nro_usuario<numero_min || nro_usuario>numero_max){
                return -1;
            }
            
            while(nro_random!=nro_usuario){
                nro_random=(int)(Math.random()*(numero_max-    numero_min+1)+numero_min);
                contador++;
            }
             scanner.close();
            return contador;
          
            
            
        }
        catch (Exception e) {
            return -1;
        }
    
    }


    /* 
     
        2.	Se requiere una función en java que simule las ventas de tres años para un almacén. Para cada año, deberá generar 
        un aleatorio para cada mes hasta completar los 12 meses. La función se llamará Simular_ventas, y debe retornar un String 
        al final que muestre las ventas de cada año, así:
        
            Año 1
            Ventas Mes 1: $##.###.###
            :
            Ventas Mes 12: $##.###.###
            Total ventas Año 1:  $##.###.###
            
            Año 2
            Ventas Mes 1: $##.###.###
            :
            Ventas Mes 12: $##.###.###
            Total ventas Año 2: $##.###.###
            
            Año 3
            Ventas Mes 1: $##.###.###
            :
            Ventas Mes 12: $##.###.###

            Total ventas Año 3: $##.###.###
            
            Investigue sobre la clase DecimalFormat para mostrar bien la salida. 
            import java.text.DecimalFormat;
            DecimalFormat form_pesos = new DecimalFormat("$#,###.00");

        
      
    */
     public static String Simular_ventas(){
          try {
              String text_ventas="";
              int anios=3;
              int meses=12;
              int ventas_alea=0;
              int venta_min=10000000;
              int venta_max=99000000;
              int ventas_total_anio=0;
              DecimalFormat form_pesos = new DecimalFormat("$#,###.00");
              
              
                for(int anio=1;anio<=anios;anio++){
                    text_ventas+= "Año "+anio+"\n";
                    for(int mes=1;mes<=meses;mes++){
                        ventas_alea=(int)(Math.random()*(venta_max-venta_min+1)+venta_min);
                        text_ventas+="ventas mes "+mes+": "+form_pesos.format(ventas_alea)+"\n : \n";
                        ventas_total_anio+=ventas_alea;
                    }
                    text_ventas+="Total ventas Año "+anio+": "+form_pesos.format(ventas_total_anio) + "\n"+ "\n";
                    ventas_total_anio=0;
                }
              return text_ventas;
          }
          catch (Exception e) {
              return "ocurrio un error";
          }
      }

    



    /*  
     
        3.	En una fábrica se tiene el siguiente patrón de empaque: En una estiba(o pallet) caben 16  cajas y en cada caja, 
        caben 30 bombillas. Desarrolle una función que se llame: Calcular_empaque que: reciba como argumento la cantidad de 
        bombillas que se deben empacar y a partir de allí: calcule cuántas cajas necesita, cuántas estibas o pallets necesita. 
        Luego escriba lo siguiente: 

        Para ### bombillas, se necesitan ## cajas y ## pallets. Se quedan ### bombillas sin empacar. Se empacará así:

        Pallet 1 --> Caja1, Caja2……,Caja16
        Pallet2 -->  Caja17, Caja18…..Caja 32
        .
        Pallet n -- > Caja m, caja m+1…..
        
        La función retornará un texto, con la información anterior. Pruebe la función llamándola desde el programa principal: solicite al usuario el número de bombillas e invoque la función para imprimir en el main, los resultados.



    */

     public static String Calcular_empaque(int nro_bombillas){
          try {
             int capacidad_cajas=30;
             int capacidad_pallets=16;
             int cajas_necesarias=nro_bombillas/capacidad_cajas;
             int bombillos_sobrantes=nro_bombillas%capacidad_cajas;
             int pallets_necesarios=(int)Math.ceil((double)cajas_necesarias/capacidad_pallets);
            int pallets_necesarios_ciclo=16;

              
              String txt_retornar="para "+nro_bombillas+" bombillas, se necesitan "+cajas_necesarias+" cajas y "+pallets_necesarios+" pallets. Se quedan "+bombillos_sobrantes+" bombillos sin empacar.Se empacara asi: \n";

              for(int estiba=1;estiba<=pallets_necesarios;estiba++){
                  txt_retornar+="pallet "+estiba+" --> ";
                  while(pallets_necesarios_ciclo>0){
                      if(cajas_necesarias<=0){
                          txt_retornar+="";
                      }else{
                      txt_retornar+="caja "+cajas_necesarias+", ";
                      }
                      cajas_necesarias--;
                      pallets_necesarios_ciclo--;
                  }
                  txt_retornar+="\n";
                  pallets_necesarios_ciclo=capacidad_pallets;
                  if(cajas_necesarias==0){
                      return txt_retornar;
                  }
                  
              }
              
              return txt_retornar;
          }
          catch (Exception e) {
              return "error en Calcular_empaque";
          }
      }

    

    /* 
    

        4.	En un juego, cada jugador tiene 3 intentos para sacar cartas de una baraja. Las cartas van numeradas entre 1 y 10. 
        Una función Jugar_21, deberá simular el juego para una cantidad de usuarios que enviará el usuario desde el main entre 1 y 6.

        Para cada uno de los jugadores, el programa le calculará 3 cartas al azar y al final imprimirá el juego para cada jugador basado en las siguientes reglas: 
        
        Si saca 21 exactos: juego perfecto
        Si saca más de 21: se pasó
        Si saca menos de 21: faltaron puntos

        La función deberá imprimir los puntos de cada jugador junto con la regla anterior, como muestra el ejemplo:

        Jugador X, puntos 21 -- > juego perfecto
        Jugador Y, puntos 26 -- > se pasó
        .
        .


    */
    public static String Jugar_21(int cant_jugadores){
          try {
              String txt_retornar="";
              int suma_cartas=0;
              int carta=0;
              int baraja_min=1;
              int baraja_max=10;
               for(int jugador=1;jugador<=cant_jugadores;jugador++){
                   txt_retornar+="Jugador "+jugador+", puntos ";
                   for(int intento=0;intento<3;intento++){
                       carta=(int)(Math.random()*(baraja_max-baraja_min+1)+baraja_min);
                       suma_cartas+=carta;
                   }
                   if(suma_cartas==21){
                       txt_retornar+=suma_cartas+" -- >"+" juego perfecto \n";
                   }else if(suma_cartas>21){
                       txt_retornar+=suma_cartas+" -- >"+" se pasó \n";
                   }else if(suma_cartas<21){
                       txt_retornar+=suma_cartas+" -- >"+" faltaron puntos \n";
                   }
                   suma_cartas=0;
               }
              return txt_retornar;
            }
            catch (Exception e) {
                return "Ocurrió un error inesperado";
            }
          
      }



}
